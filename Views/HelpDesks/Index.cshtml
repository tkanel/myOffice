@model PaginatedList<myITOffice.Models.HelpDesk>

@{
    ViewData["Title"] = "Index";
}



<form asp-action="Index" method="get">


    <div class="container-fluid form-actions no-color">
        <div class="row">

            <div class="col text-left">

                <h4>Helpdesk issues list</h4>

            </div>



            <div class="col">

                <a class="btn btn-info btn-sm" asp-action="Create">Create New</a>

            </div>

            <div class="col text-right">

                Find by description : <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                <input type="submit" value="Search" class="btn btn-info btn-sm" /> |
                <a asp-action="Index">Back to Full List</a>


            </div>




        </div>



    </div>

</form>


<table class="table table-striped table-bordered table-sm table-hover">
    <thead class="table-dark">
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DescrSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.Label("DESCRIPTION")</a>
            </th>
            <th>
                @Html.Label("NOTES")
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CategorySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.Label("CATEGORY")</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DeviceTypeSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">@Html.Label("TYPE")</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DeviceSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> @Html.Label("DEVICE")</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["UserSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> @Html.Label("USER")</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["CreatedSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> @Html.Label("CREATED")</a>
            </th>
            <th>
                @Html.Label("ATTACHMENT")
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ResolvedSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> @Html.Label("RESOLVED")</a>
            </th>



            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Descr)
                </td>
                <td>
                    @Html.Raw(item.Notes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Descr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeviceType.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Device.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OfficeUser.Name)
                </td>
                <td>
                    <div class="text-info">@Html.DisplayFor(modelItem => item.CreatedOn)</div>

                </td>
                <td>
                    @if (item.HelpDeskAttachement != null)
                    {

                        @if (item.HelpDeskAttachement.Contains("_"))
                        {

                            string attachmentFileName = item.HelpDeskAttachement.Remove(0, 37);
                            string uniqueName = item.HelpDeskAttachement;


                            <a href='~/AttachedFiles/@uniqueName'>@attachmentFileName</a>

                        }
                        else
                        {


                            @Html.Label("No attachment")

                        }


                    }
                    else
                    {

                        @Html.Label("No attachment")


                    }



                </td>
                <td>
                    @{ if (item.ResolvedOn == null)
                        {
                            @Html.Label("", "Open", new { style = "color:#ff0000" })
                        }
                        else
                        {
                            <div class="text-success">@Html.DisplayFor(modelItem => item.ResolvedOn)</div>
                        }
                    }
                </td>
                <td>
                    <partial name="_tablebuttons" model="item" />
                </td>
            </tr>
        }
    </tbody>
</table>
@*PAGINATION*@

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-light btn-sm @prevDisabled">
    <span><<</span>Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-light btn-sm @nextDisabled">
    Next <span>>></span>
</a>
